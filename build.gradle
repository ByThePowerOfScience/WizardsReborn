buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '[0.7,0.8)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

repositories {
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://modmaven.k-4u.nl"}
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = 'https://maven.saps.dev/releases' }
    mavenLocal()
}

version = "${minecraft_version}-${mod_version}"
group = 'mod.maxbogomol.wizards_reborn'
archivesBaseName = 'wizards_reborn'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'parchment', version: '2023.06.26-1.20.1'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')
            jvmArg "-Dmixin.env.disableRefMap=true"
            arg "-mixin.config=wizards_reborn.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { wizards_reborn { source sourceSets.main } }
        }

        client {
            args "--username", "Dev"
            property 'forge.enabledGameTestNamespaces', "fluffy_fur"
        }

        server {
            property 'forge.enabledGameTestNamespaces', "fluffy_fur"
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', "fluffy_fur"
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', 'wizards_reborn', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("mod.maxbogomol.fluffy_fur:fluffy_fur:${minecraft_version}-${fluffy_fur_version}")

    implementation fg.deobf("top.theillusivec4.curios:curios-forge:5.9.1+1.20.1")
    implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-1.20.1:14.0.39")
    implementation fg.deobf("mezz.jei:jei-1.20.1-forge:15.8.2.25")
    implementation fg.deobf("curse.maven:jade-324717:5493390")

    compileOnly fg.deobf("curse.maven:farmers-delight-398521:5051242")
}

task customRun {
    dependencies {
        runtimeOnly fg.deobf("curse.maven:fusion-connected-textures-854949:5129294")
        runtimeOnly fg.deobf("curse.maven:configured-457570:5180900")
        runtimeOnly fg.deobf("curse.maven:model-gap-fix-676136:5200949")
        runtimeOnly fg.deobf("curse.maven:embeddium-908741:5566632")
        runtimeOnly fg.deobf("curse.maven:oculus-581495:5299671")
        runtimeOnly fg.deobf("curse.maven:free-cam-557076:4643128")
    }

    finalizedBy 'runClient'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "wizards_reborn",
            "Specification-Vendor": "MaxBogomol",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"MaxBogomol",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    repositories {
        def token = providers.environmentVariable("SAPS_TOKEN") // This is exposed from your github secrets & workflows env: section
        if (token.isPresent()) {
            maven {
                url "https://maven.saps.dev/releases" // Use snapshots if you ever start working with snapshots
                credentials {
                    username = "maxbogomol"
                    password = token.get()
                }
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName

            from components.java
            fg.component(it)
            jarJar.component(it)
        }
    }
}

mixin {
    add sourceSets.main, "wizards_reborn.refmap.json"
    config 'wizards_reborn.mixins.json'
    dumpTargetOnFailure true
}